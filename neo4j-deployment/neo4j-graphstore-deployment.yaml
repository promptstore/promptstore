apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: neo4j-graphstore
  name: neo4j-graphstore
  namespace: "{{ .Values.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neo4j-graphstore
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: neo4j-graphstore
    spec:
      initContainers:
        - name: chown
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              "chown",
              "-R",
              "7474:7474",
              "/conf",
              "/data",
              "/import",
              "/logs"
            ]
          volumeMounts:
            - mountPath: /conf
              name: neo4j-graphstore-storage
              subPath: conf
            - mountPath: /data
              name: neo4j-graphstore-storage
              subPath: data
            - mountPath: /import
              name: neo4j-graphstore-storage
              subPath: import
            - mountPath: /logs
              name: neo4j-graphstore-storage
              subPath: logs
      containers:
        - env:
            - name: NEO4J_AUTH
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_AUTH
                  name: "{{ .Values.appname }}"
            - name: NEO4J_server_memory_heap_initial__size
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_server_memory_heap_initial__size
                  name: "{{ .Values.appname }}"
            - name: NEO4J_server_memory_heap_max__size
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_server_memory_heap_max__size
                  name: "{{ .Values.appname }}"
            - name: NEO4J_server_memory_pagecache_size
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_server_memory_pagecache_size
                  name: "{{ .Values.appname }}"
            - name: NEO4J_apoc_export_file_enabled
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_apoc_export_file_enabled
                  name: "{{ .Values.appname }}"
            - name: NEO4J_apoc_import_file_enabled
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_apoc_import_file_enabled
                  name: "{{ .Values.appname }}"
            - name: NEO4J_dbms_security_procedures_unrestricted
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_dbms_security_procedures_unrestricted
                  name: "{{ .Values.appname }}"
            - name: NEO4J_dbms_security_procedures_allowlist
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_dbms_security_procedures_allowlist
                  name: "{{ .Values.appname }}"
            - name: NEO4J_dbms_memory_transaction_total_max
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_dbms_memory_transaction_total_max
                  name: "{{ .Values.appname }}"
            - name: NEO4J_apoc_trigger_enabled
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_apoc_trigger_enabled
                  name: "{{ .Values.appname }}"
            - name: NEO4J_dbms_routing_enabled
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_dbms_routing_enabled
                  name: "{{ .Values.appname }}"
            - name: NEO4J_server_config_strict__validation_enabled
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_server_config_strict__validation_enabled
                  name: "{{ .Values.appname }}"
            - name: NEO4J_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: NEO4J_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            - name: NEO4J_dbms_allow__upgrade  # set to "true" will auto upgrade the data if an image with different version is set
              value: "true"
          image: neo4j:5.12.0
          imagePullPolicy: IfNotPresent
          name: neo4j
          ports:
            - containerPort: 7474
            - containerPort: 7687
          resources:
            requests:
              memory: "11Gi"
          volumeMounts:
            - mountPath: /var/data/graphstores/neo4j/conf
              name: neo4j-graphstore-storage
              subPath: conf
            - mountPath: /var/data/graphstores/neo4j/data
              name: neo4j-graphstore-storage
              subPath: data
            - mountPath: /var/data/graphstores/neo4j/import
              name: neo4j-graphstore-storage
              subPath: import
            - mountPath: /var/data/graphstores/neo4j/logs
              name: neo4j-graphstore-storage
              subPath: logs
            - mountPath: /var/data/graphstores/neo4j/plugins
              name: neo4j-graphstore-storage
              subPath: plugins
      restartPolicy: Always
      volumes:
        - name: neo4j-graphstore-storage
          persistentVolumeClaim:
            claimName: neo4j-graphstore-pvc