apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appname }}"
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      imagePullSecrets:
        - name: "{{ .Values.imagePullSecret }}"
      containers:
        - name: api
          image: "{{ .Values.containerRegistry }}/{{ .Values.appname }}:{{ .Values.version }}"
          env:
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  key: ENV
                  name: "{{ .Values.appname }}"
            - name: FILE_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: FILE_BUCKET
                  name: "{{ .Values.appname }}"
            - name: DOCUMENTS_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: DOCUMENTS_PREFIX
                  name: "{{ .Values.appname }}"
            - name: IMAGES_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: IMAGES_PREFIX
                  name: "{{ .Values.appname }}"
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: "{{ .Values.appname }}"
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  key: PGHOST
                  name: "{{ .Values.appname }}"
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  key: PGPORT
                  name: "{{ .Values.appname }}"
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: "{{ .Values.appname }}"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: "{{ .Values.appname }}"
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: S3_ENDPOINT
                  name: "{{ .Values.appname }}"
            - name: S3_PORT
              valueFrom:
                configMapKeyRef:
                  key: S3_PORT
                  name: "{{ .Values.appname }}"
            - name: SEARCH_API
              valueFrom:
                configMapKeyRef:
                  key: SEARCH_API
                  name: "{{ .Values.appname }}"
            - name: TEMPORAL_URL
              valueFrom:
                configMapKeyRef:
                  key: TEMPORAL_URL
                  name: "{{ .Values.appname }}"
            - name: TEMPORAL_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: TEMPORAL_NAMESPACE
                  name: "{{ .Values.appname }}"
            - name: LOKI_API_URL
              valueFrom:
                configMapKeyRef:
                  key: LOKI_API_URL
                  name: "{{ .Values.appname }}"
            - name: EMBEDDING_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: EXTRACTOR_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: EXTRACTOR_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: FEATURE_STORE_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: FEATURE_STORE_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: GUARDRAIL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: GUARDRAIL_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: LLM_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: LLM_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: LOADER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: LOADER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: MODEL_PROVIDER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: MODEL_PROVIDER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: OUTPUT_PARSER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: OUTPUT_PARSER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: PASSPORT_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: PASSPORT_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: SQL_SOURCE_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: SQL_SOURCE_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: TOOL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: TOOL_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_URL
              valueFrom:
                configMapKeyRef:
                  key: ANAML_API_URL
                  name: "{{ .Values.appname }}"
            - name: EUROPA_PII_API_URL
              valueFrom:
                configMapKeyRef:
                  key: EUROPA_PII_API_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_PII_API_URL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_PII_API_URL
                  name: "{{ .Values.appname }}"
            - name: ONESOURCE_API_URL
              valueFrom:
                configMapKeyRef:
                  key: ONESOURCE_API_URL
                  name: "{{ .Values.appname }}"
            - name: UNSTRUCTURED_API_URL
              valueFrom:
                configMapKeyRef:
                  key: UNSTRUCTURED_API_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_BASE_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_HUB_API
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_HUB_API
                  name: "{{ .Values.appname }}"
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: "{{ .Values.appname }}"
            - name: PALM2_MODEL_NAME
              valueFrom:
                configMapKeyRef:
                  key: PALM2_MODEL_NAME
                  name: "{{ .Values.appname }}"
            - name: LLAMA2_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LLAMA2_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: LLAMAAPI_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LLAMAAPI_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: LOCALAI_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LOCALAI_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: GPT4ALL_API
              valueFrom:
                configMapKeyRef:
                  key: GPT4ALL_API
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_HOST
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_HOST
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CALLBACK
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_CALLBACK
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_REALM
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_REALM
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_CLIENT_ID
                  name: "{{ .Values.appname }}"
            - name: TOKEN_STORE_KEY
              valueFrom:
                configMapKeyRef:
                  key: TOKEN_STORE_KEY
                  name: "{{ .Values.appname }}"
            - name: SERPAPI_URL
              valueFrom:
                configMapKeyRef:
                  key: SERPAPI_URL
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_TEMPLATE_UUID
              valueFrom:
                configMapKeyRef:
                  key: MAILTRAP_TEMPLATE_UUID
                  name: "{{ .Values.appname }}"

            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: PGUSER
                  name: "{{ .Values.appname }}"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: PGPASSWORD
                  name: "{{ .Values.appname }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: REDIS_PASSWORD
                  name: "{{ .Values.appname }}"
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY
                  name: "{{ .Values.appname }}"
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_KEY
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_KEY
              valueFrom:
                secretKeyRef:
                  key: ANAML_API_KEY
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: ANAML_API_SECRET
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_TOKEN
              valueFrom:
                secretKeyRef:
                  key: HUGGINGFACE_TOKEN
                  name: "{{ .Values.appname }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: "{{ .Values.appname }}"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: "{{ .Values.appname }}"
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  key: AWS_SESSION_TOKEN
                  name: "{{ .Values.appname }}"
            - name: LLAMAAPI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: LLAMAAPI_API_KEY
                  name: "{{ .Values.appname }}"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: OPENAI_API_KEY
                  name: "{{ .Values.appname }}"
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: GOOGLE_API_KEY
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: KEYCLOAK_CLIENT_SECRET
                  name: "{{ .Values.appname }}"
            - name: PROMPTSTORE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: PROMPTSTORE_API_KEY
                  name: "{{ .Values.appname }}"
            - name: SERPAPI_KEY
              valueFrom:
                secretKeyRef:
                  key: SERPAPI_KEY
                  name: "{{ .Values.appname }}"
            - name: OPENWEATHER_API_KEY
              valueFrom:
                secretKeyRef:
                  key: OPENWEATHER_API_KEY
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_TOKEN
              valueFrom:
                secretKeyRef:
                  key: MAILTRAP_TOKEN
                  name: "{{ .Values.appname }}"
            - name: SENDER_EMAIL
              valueFrom:
                secretKeyRef:
                  key: SENDER_EMAIL
                  name: "{{ .Values.appname }}"
            - name: PROMPTSTORE_EMAIL
              valueFrom:
                secretKeyRef:
                  key: PROMPTSTORE_EMAIL
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_INVITE_TEMPLATE_UUID
              valueFrom:
                secretKeyRef:
                  key: MAILTRAP_INVITE_TEMPLATE_UUID
                  name: "{{ .Values.appname }}"
          volumeMounts:
            - mountPath: /var/data
              name: file-storage

        - name: worker
          image: "{{ .Values.containerRegistry }}/{{ .Values.appname }}:{{ .Values.version }}"
          command: ["node"]
          args: ["--loader", "ts-node/esm", "workflow/worker.js"]
          env:
            - name: NODE_OPTIONS
              value: "--experimental-modules --es-module-specifier-resolution=node"
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  key: ENV
                  name: "{{ .Values.appname }}"
            - name: FILE_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: FILE_BUCKET
                  name: "{{ .Values.appname }}"
            - name: DOCUMENTS_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: DOCUMENTS_PREFIX
                  name: "{{ .Values.appname }}"
            - name: IMAGES_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: IMAGES_PREFIX
                  name: "{{ .Values.appname }}"
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: "{{ .Values.appname }}"
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  key: PGHOST
                  name: "{{ .Values.appname }}"
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  key: PGPORT
                  name: "{{ .Values.appname }}"
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: "{{ .Values.appname }}"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: "{{ .Values.appname }}"
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: S3_ENDPOINT
                  name: "{{ .Values.appname }}"
            - name: S3_PORT
              valueFrom:
                configMapKeyRef:
                  key: S3_PORT
                  name: "{{ .Values.appname }}"
            - name: SEARCH_API
              valueFrom:
                configMapKeyRef:
                  key: SEARCH_API
                  name: "{{ .Values.appname }}"
            - name: TEMPORAL_URL
              valueFrom:
                configMapKeyRef:
                  key: TEMPORAL_URL
                  name: "{{ .Values.appname }}"
            - name: TEMPORAL_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: TEMPORAL_NAMESPACE
                  name: "{{ .Values.appname }}"
            - name: LOKI_API_URL
              valueFrom:
                configMapKeyRef:
                  key: LOKI_API_URL
                  name: "{{ .Values.appname }}"
            - name: EMBEDDING_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: EXTRACTOR_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: EXTRACTOR_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: FEATURE_STORE_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: FEATURE_STORE_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: GUARDRAIL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: GUARDRAIL_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: LLM_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: LLM_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: LOADER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: LOADER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: MODEL_PROVIDER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: MODEL_PROVIDER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: OUTPUT_PARSER_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: OUTPUT_PARSER_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: PASSPORT_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: PASSPORT_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: SQL_SOURCE_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: SQL_SOURCE_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: TOOL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: TOOL_PLUGINS
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_URL
              valueFrom:
                configMapKeyRef:
                  key: ANAML_API_URL
                  name: "{{ .Values.appname }}"
            - name: EUROPA_PII_API_URL
              valueFrom:
                configMapKeyRef:
                  key: EUROPA_PII_API_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_PII_API_URL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_PII_API_URL
                  name: "{{ .Values.appname }}"
            - name: ONESOURCE_API_URL
              valueFrom:
                configMapKeyRef:
                  key: ONESOURCE_API_URL
                  name: "{{ .Values.appname }}"
            - name: UNSTRUCTURED_API_URL
              valueFrom:
                configMapKeyRef:
                  key: UNSTRUCTURED_API_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_BASE_URL
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_HUB_API
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_HUB_API
                  name: "{{ .Values.appname }}"
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: "{{ .Values.appname }}"
            - name: PALM2_MODEL_NAME
              valueFrom:
                configMapKeyRef:
                  key: PALM2_MODEL_NAME
                  name: "{{ .Values.appname }}"
            - name: LLAMA2_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LLAMA2_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: LLAMAAPI_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LLAMAAPI_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: LOCALAI_BASE_PATH
              valueFrom:
                configMapKeyRef:
                  key: LOCALAI_BASE_PATH
                  name: "{{ .Values.appname }}"
            - name: GPT4ALL_API
              valueFrom:
                configMapKeyRef:
                  key: GPT4ALL_API
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_HOST
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_HOST
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CALLBACK
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_CALLBACK
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_REALM
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_REALM
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_CLIENT_ID
                  name: "{{ .Values.appname }}"
            - name: TOKEN_STORE_KEY
              valueFrom:
                configMapKeyRef:
                  key: TOKEN_STORE_KEY
                  name: "{{ .Values.appname }}"
            - name: SERPAPI_URL
              valueFrom:
                configMapKeyRef:
                  key: SERPAPI_URL
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_TEMPLATE_UUID
              valueFrom:
                configMapKeyRef:
                  key: MAILTRAP_TEMPLATE_UUID
                  name: "{{ .Values.appname }}"

            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: PGUSER
                  name: "{{ .Values.appname }}"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: PGPASSWORD
                  name: "{{ .Values.appname }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: REDIS_PASSWORD
                  name: "{{ .Values.appname }}"
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY
                  name: "{{ .Values.appname }}"
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_KEY
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_KEY
              valueFrom:
                secretKeyRef:
                  key: ANAML_API_KEY
                  name: "{{ .Values.appname }}"
            - name: ANAML_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: ANAML_API_SECRET
                  name: "{{ .Values.appname }}"
            - name: HUGGINGFACE_TOKEN
              valueFrom:
                secretKeyRef:
                  key: HUGGINGFACE_TOKEN
                  name: "{{ .Values.appname }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: "{{ .Values.appname }}"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: "{{ .Values.appname }}"
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  key: AWS_SESSION_TOKEN
                  name: "{{ .Values.appname }}"
            - name: LLAMAAPI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: LLAMAAPI_API_KEY
                  name: "{{ .Values.appname }}"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: OPENAI_API_KEY
                  name: "{{ .Values.appname }}"
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: GOOGLE_API_KEY
                  name: "{{ .Values.appname }}"
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: KEYCLOAK_CLIENT_SECRET
                  name: "{{ .Values.appname }}"
            - name: PROMPTSTORE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: PROMPTSTORE_API_KEY
                  name: "{{ .Values.appname }}"
            - name: SERPAPI_KEY
              valueFrom:
                secretKeyRef:
                  key: SERPAPI_KEY
                  name: "{{ .Values.appname }}"
            - name: OPENWEATHER_API_KEY
              valueFrom:
                secretKeyRef:
                  key: OPENWEATHER_API_KEY
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_TOKEN
              valueFrom:
                secretKeyRef:
                  key: MAILTRAP_TOKEN
                  name: "{{ .Values.appname }}"
            - name: SENDER_EMAIL
              valueFrom:
                secretKeyRef:
                  key: SENDER_EMAIL
                  name: "{{ .Values.appname }}"
            - name: PROMPTSTORE_EMAIL
              valueFrom:
                secretKeyRef:
                  key: PROMPTSTORE_EMAIL
                  name: "{{ .Values.appname }}"
            - name: MAILTRAP_INVITE_TEMPLATE_UUID
              valueFrom:
                secretKeyRef:
                  key: MAILTRAP_INVITE_TEMPLATE_UUID
                  name: "{{ .Values.appname }}"
          volumeMounts:
            - mountPath: /var/data
              name: file-storage
      volumes:
        - name: file-storage
          persistentVolumeClaim:
            claimName: file-storage-pvc
